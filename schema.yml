openapi: 3.0.3
info:
  title: AI Job Description Generator API
  version: 1.0.0
paths:
  /api/v1/auth/jwt/create/:
    post:
      operationId: api_v1_auth_jwt_create_create
      description: Takes a set of user credentials and returns an access and refresh
        JSON web token pair.
      summary: Generate access and refresh tokens
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: api_v1_auth_jwt_refresh_create
      description: Takes a valid refresh token and returns a new access token.
      summary: Refresh access token
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/jwt/verify/:
    post:
      operationId: api_v1_auth_jwt_verify_create
      description: Verifies if a given token is valid.
      summary: Verify access token validity
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/generate-job-description/:
    post:
      operationId: api_v1_generate_job_description_create
      description: Handle POST request to create a job description based on company
        name and job title.
      summary: Generate a job description
      tags:
      - Job Description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobDescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobDescription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                job_description: string
          description: Job description generated successfully.
        '400':
          description: Bad Request due to invalid input.
        '500':
          description: Internal Server Error encountered during processing.
  /api/v1/subscriptions/cancel/:
    post:
      operationId: api_v1_subscriptions_cancel_create
      description: Cancel subscription for the current user
      summary: Cancel Current Subscription
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelSubscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSubscription'
          description: ''
  /api/v1/subscriptions/checkout/session/:
    post:
      operationId: api_v1_subscriptions_checkout_session_create
      description: Endpoint to create new checkout session for a specific plan.
      summary: Create new Checkout Session
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckoutSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckoutSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSessionResponse'
          description: ''
  /api/v1/subscriptions/products/:
    get:
      operationId: api_v1_subscriptions_products_list
      description: Endpoint to list all available products and their prices with pagination
      summary: List all available products and prices with pagination
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPriceList'
          description: ''
components:
  schemas:
    CancelSubscription:
      type: object
      properties:
        subscription_id:
          type: string
      required:
      - subscription_id
    CheckoutSession:
      type: object
      properties:
        plan_uuid:
          type: string
          format: uuid
      required:
      - plan_uuid
    CheckoutSessionResponse:
      type: object
      properties:
        session_url:
          type: string
          format: uri
      required:
      - session_url
    JobDescription:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        job_title:
          type: string
          maxLength: 255
      required:
      - company_name
      - job_title
    PaginatedPriceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Price'
    Price:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        s_id:
          type: string
          maxLength: 100
        currency:
          type: string
          maxLength: 3
        nickname:
          type: string
          maxLength: 100
        recurring_interval:
          type: string
          maxLength: 10
        recurring_interval_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        product_name:
          type: string
          readOnly: true
      required:
      - product_name
      - s_id
      - uuid
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
